name: Build/deb packaging for Skynode and other archs

on:
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  packaging:
    name: "ROS 2 ${{ matrix.ros2_distro }} - ${{ matrix.arch }}"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ros2_distro: [foxy]
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v2
      - name: Fisable the keychain credential helper
        run: git config --global credential.helper ""
      - name: Enable the local store credential helper
        run: git config --global --add credential.helper store
      - name: Add credential
        run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
      - name: Tell git to use https instead of ssh whenever it encounters it
        run: 'git config --global url."https://github.com/".insteadof git@github.com:'
      - name: Construct release artifact filename
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: |
          ARCH=$(bash -c "if [ \"${{ matrix.arch }}\" = \"x86_64\" ]; then echo amd64; elif [ \"${{ matrix.arch }}\" = \"aarch64\" ]; then echo arm64; fi")
          RELEASE_VERSION=${{ github.ref_name }}
          echo "artifact_filename=autopilot-manager_${{ matrix.ros2_distro }}_${RELEASE_VERSION}_${ARCH}.zip" >> $GITHUB_ENV
          # Print out release info
          echo "ROS distro:      ${{ matrix.ros2_distro }}"
          echo "Release version: ${RELEASE_VERSION}"
          echo "Architecture:    ${ARCH}"
          echo "Artifact file:   ${{ env.artifact_filename }}"
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends \
            git \
            python3-pip \
            python3-rosinstall \
            qemu-user-static
          sudo pip3 install ros_cross_compile
      - name: Configure workspace
        run: |
          unset ROS_DISTRO
          mkdir -p /tmp/colcon_ws/src
          cp -ar ${GITHUB_WORKSPACE} /tmp/colcon_ws/src/autopilot_manager/
      - name: Clone MAVSDK
        run: |
          # Clone MAVSDK to be built from source
          git clone --recursive https://github.com/Auterion/MAVSDK.git -b main /tmp/MAVSDK
          # Add COLCON_IGNORE to the MAVSDK dir so colcon doesn't build it
          touch /tmp/MAVSDK/COLCON_IGNORE
      - name: Fetch source dependencies
        working-directory: /tmp/colcon_ws/src/autopilot_manager
        run: |
          rosws update -t .
      - name: Setup source dependencies in develop mode
        if: github.event_name == 'pull_request' && github.base_ref != 'main'
        run: |
          echo "Setting up develop-mode sources for PR to branch ${{ github.base_ref }}"
          # Landing Mapper
          cd /tmp/colcon_ws/src/landing_mapper
          git checkout develop
          cd -
      - name: Build
        run: |
          # Run cross-compilation
          ros_cross_compile /tmp/colcon_ws \
            --arch ${{ matrix.arch }} \
            --os ubuntu \
            --rosdistro ${{ matrix.ros2_distro }} \
            --custom-setup-script tools/packaging/cross_compile_dependencies.sh \
            --custom-data-dir /tmp/MAVSDK \
            --skip-rosdep-keys Eigen3 image_downsampler landing_mapper landing_planner px4_msgs timing_tools ros2bagger rosbag2 \
            --colcon-defaults /tmp/colcon_ws/src/autopilot_manager/tools/packaging/defaults.yaml
      - name: Create zip
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: |
          cd /tmp/colcon_ws/install_${{ matrix.arch }}
          rm -rf px4_msgs # should be packaged in the px4-bridge
          zip -r ${{ env.artifact_filename }} .
      - name: Publish release artifact
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /tmp/colcon_ws/install_${{ matrix.arch }}/${{ env.artifact_filename }}
          release_name: ${{ github.ref_name }}
          asset_name: ${{ env.artifact_filename }}
          tag: ${{ github.ref_name }}
          overwrite: true
