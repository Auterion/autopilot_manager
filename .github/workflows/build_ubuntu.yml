name: Build in Ubuntu

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Ubuntu 20.04 with ROS 2 Foxy build
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: Enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: Add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: Tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: Install dependencies
      run: |
        # Set locale
        sudo apt update
        sudo apt install -y locales
        sudo locale-gen en_US en_US.UTF-8
        sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
        export LANG=en_US.UTF-8
        # Setup ROS 2 sources
        sudo apt install -y curl gnupg2 lsb-release
        curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add
        sudo sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
        # Install ROS 2 Foxy packages
        sudo apt update
        sudo apt install -y python3-colcon-common-extensions ros-foxy-ros-base ros-foxy-sensor-msgs ros-foxy-image-pipeline
        # Setup environment
        source /opt/ros/foxy/setup.bash
        # Install MAVSDK from source
        sudo apt install -y colordiff git
        git clone --recursive https://github.com/Auterion/MAVSDK.git -b main
        cd MAVSDK
        cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -Bbuild/default -H.
        sudo cmake --build build/default --target install -j`nproc --all`
        sudo ldconfig
        # Install DBUS
        sudo apt install -y libdbus-glib-1-dev
        # Install Clang formatter
        sudo apt install -y clang-format-10
    - name: Check code formatting
      run: tools/check_code_format.sh
    - name: Build
      run: |
        mkdir -p colcon_ws/src
        cd colcon_ws
        ln -s ${GITHUB_WORKSPACE} src/autopilot_manager
        source /opt/ros/foxy/setup.bash
        colcon build
